[project]
name = "Unified_Name_Space"
version = "0.9.3"
description = "Set of modules / tools to realize an UNS for your organization"
authors = [{ name = "Ashwin Krishnan", email = "mkashwin@gmail.com" }]
requires-python = "~=3.12"
readme = "README.md"
license = { text = "MIT" }
maintainers = [
    { name = "Himanshu Dhami", email = "himanshudhami@gmail.com" },
    { name = "Johan Jeppson", email = "logic4human@gmail.com" },
]
keywords = [
    "uns",
    "mqtt",
    "sparkplugB",
    "graphDB",
    "historian",
    "kafka",
    "graphql",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Manufacturing",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Development Status :: 4 - Beta",
    "Topic :: Communications",
    #"Topic :: Software Development :: Libraries :: MQTT",
    #"Topic :: Industry 4.0 :: Unified Name Space :: MQTT client",
]
dependencies = [
    "uns_mqtt",
    "uns_graphdb",
    "uns_historian",
    "uns_spb_mapper",
    "uns_kafka_mapper",
    "uns_graphql",
]

[project.urls]
Repository = "https://github.com/mkashwin/unifiednamespace/"

[dependency-groups]
test = [
    "pytest>=8.3.4,<9",
    "pytest-asyncio>=0.25,<1.2",
    "pytest-xdist>=3.6.1,<4",
    "pytest-timeout>=2.3.1,<3",
    "pytest-cov>=6.0.0,<7",
    "safety>=3.4.0,<4",
    "pytest-retry>=1.7.0,<2",
]

[tool.uv]
package = false
default-groups = ["test"]

[tool.uv.sources]
uns_mqtt = { path = "./02_mqtt-cluster", editable = true  }
uns_graphdb = { path = "./03_uns_graphdb", editable = true }
uns_historian = { path = "./04_uns_historian", editable = true}
uns_spb_mapper = { path = "./05_sparkplugb", editable = true }
uns_kafka_mapper = { path = "./06_uns_kafka", editable = true}
uns_graphql = { path = "./07_uns_graphql", editable = true }

[tool.uv.workspace]
members = ["uns_mqtt", "uns_graphdb", "uns_historian", "uns_spb_mapper", "uns_kafka_mapper", "uns_graphql"]

[tool.pytest.ini_options]
markers = ["integrationtest: mark a test as an integration test"]
norecursedirs = [".git", "build", "node_modules", "env*", "tmp*"]
addopts = "--import-mode=importlib -n auto --dist loadgroup --timeout=300 --durations=10"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "02_mqtt-cluster/test",
    "03_uns_graphdb/test",
    "04_uns_historian/test",
    "05_sparkplugb/test",
    "06_uns_kafka/test",
    "07_uns_graphql/test",
]

[tool.ruff]


exclude = [
    # No need to traverse our git directories
    ".git",
    ".github",
    "__pycache__",
    ".cache",
    # The conf file is mostly autogenerated, ignore it
    "*env*",
    # This contains our built documentation
    "build",
    # This contains builds of flake8 that we don't want to check
    "dist",
    # This folder contains auto generated files which doesn't make sense to check
    "generated",
]

# Allow lines to be as long as 127.
line-length = 127

[tool.ruff.lint]

preview = true
unfixable = ["B"]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "E",
    "F",
    "UP",
    "W",
    "I",
    "N",
    "S",
    "T",
    "RUF",
    "LOG",
    "PERF",
]
ignore = [
    "D200",
    "D211",
    "D212",
    "D213",
    "S101",
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.mccabe]
max-complexity = 15
