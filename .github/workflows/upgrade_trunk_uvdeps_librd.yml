# trunk-ignore-all(checkov/CKV2_GHA_1)
#
# pipeline to check for new release of librdkafka, trunk updates, and uv dependencies update
#
name: Update Trunk, uv, librdkafka
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

jobs:
  run_trunk_upgrade:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Trunk install
        uses: trunk-io/trunk-action/setup@v1

      - name: "Run Trunk upgrade"
        uses: trunk-io/trunk-action/upgrade@v1

  run_librd_uv_sync_upgrade:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: "Update packages"
        id: uv_sync_upgrade
        run: |
          python -m pip install --upgrade pip uv

          find . -name pyproject.toml -execdir uv sync --upgrade \;

          if [[ -n $(git status --porcelain) ]]; then
            # Extract lines starting with 'version' and the line before each
            changes=$(git diff "uv.lock" | grep   "+version = " -B 2 | tr '\n' ';' | sed 's/--/==/g')
            echo $changes
            echo "check_in_msg='Updated packages: ${changes}'" >> $GITHUB_OUTPUT
            echo "check_in_title='Ran uv sync --upgrade'" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in uv dependencies."
          fi

      - name: "Check for latest release of librdkafka"
        id: librdkafka_upgrade
        env:
          check_in_msg: ${{ steps.uv_sync_upgrade.outputs.check_in_msg }}
          check_in_title: ${{ steps.uv_sync_upgrade.outputs.check_in_title }}
        run: |
          # Define the path to the Dockerfile. Currently using only 06_uns_kafka but will update 07_uns_graphql also
          KAKFA_DOCKER="./06_uns_kafka/Dockerfile"
          GRAPHQL_DOCKER="./07_uns_graphql/Dockerfile"

          current_version=$(grep -oP '(?<=LIBRDKAFKA_VER=")[^"]*' "$KAKFA_DOCKER")

          latest_release=$(curl -s https://api.github.com/repos/confluentinc/librdkafka/releases/latest | jq -r '.tag_name')
          # drop the leading v character in the version 
          latest_release=${latest_release:1}
          if [[ "$current_version" != "$latest_release" ]]; then
            OLD_TEXT=LIBRDKAFKA_VER=\"${current_version}\"
            NEW_TEXT=LIBRDKAFKA_VER=\"${latest_release}\"
            # Use sed to replace all instances of OLD_TEXT with NEW_TEXT in the file
            sed -i "s/${OLD_TEXT}/${NEW_TEXT}/g" "$KAKFA_DOCKER"
            sed -i "s/${OLD_TEXT}/${NEW_TEXT}/g" "$GRAPHQL_DOCKER"
            echo "check_in_msg=${check_in_msg}, upgraded librdkafka to v${latest_release}"  >> $GITHUB_OUTPUT
            echo "check_in_title=${check_in_title}, 'upgraded librdkafka to v${latest_release}'"  >> $GITHUB_OUTPUT
          else
            echo "check_in_msg=${check_in_msg}"  >> $GITHUB_OUTPUT
            echo "check_in_title=${check_in_title}" >> $GITHUB_OUTPUT
          fi

      - name: "Check for changed files and then create branch to commit changes as well as PR"
        id: create_branch
        env:
          check_in_msg: ${{ steps.librdkafka_upgrade.outputs.check_in_msg }}
          check_in_title: ${{ steps.librdkafka_upgrade.outputs.check_in_title }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Actions"

          if [[ -z "$check_in_msg" ]]; then
            check_in_msg="Automated update: uv, librdkafka"
          fi

          if [[ -n $(git status --porcelain) ]]; then
            raise_pr=true
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            TARGET_BRANCH_NAME="features/trunk_uv_librdkafka_upgrade_${TIMESTAMP}"
            git checkout -b $TARGET_BRANCH_NAME || exit 1
            git push origin $TARGET_BRANCH_NAME || exit 1

            git add .
            git commit -m "$check_in_msg"
            git push origin $TARGET_BRANCH_NAME || exit 1
            echo "TARGET_BRANCH_NAME=${TARGET_BRANCH_NAME}" >> $GITHUB_OUTPUT
            echo "check_in_msg=${check_in_msg}" >> $GITHUB_OUTPUT
            echo "check_in_title=${check_in_title}" >> $GITHUB_OUTPUT
          else
            raise_pr=false
          fi
          echo "raise_pr=${raise_pr}" >> $GITHUB_OUTPUT

      - name: Debug Outputs
        run: |
          echo "raise_pr=${{ steps.create_branch.outputs.raise_pr }}"
          echo "TARGET_BRANCH_NAME=${{ steps.create_branch.outputs.TARGET_BRANCH_NAME }}"
          echo "check_in_msg=${{ steps.create_branch.outputs.check_in_msg }}"
          echo "check_in_title=${{ steps.create_branch.outputs.check_in_title }}"

      - name: Raise Pull Request
        if: steps.create_branch.outputs.raise_pr == 'true'
        env:
          check_in_msg: ${{ steps.create_branch.outputs.check_in_msg }}
          check_in_title: ${{ steps.create_branch.outputs.check_in_title }}
          TARGET_BRANCH_NAME: ${{ steps.create_branch.outputs.TARGET_BRANCH_NAME }}
        uses: devops-infra/action-pull-request@v0.6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ env.check_in_title }}"
          label: "uv_sync,librdkafka,upgrade"
          source_branch: "${{ env.TARGET_BRANCH_NAME }}"
          target_branch: "main"
          body: |
            Automated update of uv dependencies and librdkafka version.
            Changes made:
            - "${{ env.check_in_msg }}"
          get_diff: true
