# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: UNS Historian MQTT Client

on:
  push:
    branches:
      - "**"
    paths:
      - "02_mqtt-cluster/**/*.py"
      - "02_mqtt-cluster/pyproject.toml"
      - "02_mqtt-cluster/poetry.lock"
      - "04_uns_historian/**/*.py"
      - "04_uns_historian/pyproject.toml"
      - "04_uns_historian/poetry.lock"
      - "04_uns_historian/Dockerfile"
      - ".github/workflows/uns_historian-app.yml"
  pull_request:
    branches:
      - "**"
    paths:
      - "02_mqtt-cluster/**/*.py"
      - "02_mqtt-cluster/pyproject.toml"
      - "02_mqtt-cluster/poetry.lock"
      - "04_uns_historian/**/*.py"
      - "04_uns_historian/pyproject.toml"
      - "04_uns_historian/poetry.lock"
      - "04_uns_historian/Dockerfile"
      - ".github/workflows/uns_historian-app.yml"
permissions:
  contents: read

jobs:
  build_code:
    runs-on: ubuntu-latest
    env:
      UNS_mqtt__host: "localhost"
      UNS_mqtt__port: 1883
      UNS_historian__hostname: "localhost"
      UNS_historian__database: "uns_historian"
      UNS_historian__table: "UnifiedNamespace"
      UNS_historian__username: "uns_dbuser"
      UNS_historian__password: $(openssl rand -base64 32 | tr -dc '[:alnum:]')
      POSTGRES_PASSWORD: $(openssl rand -base64 32 | tr -dc '[:alnum:]')
    services:
      uns_mqtt:
        image: emqx/emqx:latest
        ports:
          - "1883:1883"
      uns_timescaledb:
        image: timescale/timescaledb:latest-pg14
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Create Database for Integration Testing
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          UNS_historian__password: ${{ env.UNS_historian__password }}
        run: |
          echo "CREATE database $UNS_historian__database;
          \c $UNS_DB;
          CREATE EXTENSION IF NOT EXISTS timescaledb;

          CREATE ROLE $UNS_historian__username
          LOGIN
          PASSWORD '$UNS_historian__password'

          \c $UNS_historian__database $UNS_historian__username;

          CREATE TABLE $UNS_historian__table (
          time TIMESTAMPTZ NOT NULL,
          topic text NOT NULL,
          client_id text,
          mqtt_msg JSONB
          );

          SELECT create_hypertable('$UNS_historian__table', 'time');
          " | PGPASSWORD=${POSTGRES_PASSWORD} psql -h ${UNS_historian__hostname} -U postgres  -p 5432

      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          # change to current directory of module        
          cd ./04_uns_historian
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Lint with flake8
        run: |
          # change to current directory of module        
          cd ./04_uns_historian
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 ./src ./test --count --select=E9,F63,F7,F82 --show-source --statistics 
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 ./src ./test --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test for security vulnerabilities
        run: |
          # change to current directory of module        
          cd ./04_uns_historian    
          poetry run safety check

      - name: Test with pytest
        run: |
          cd ./04_uns_historian
          poetry run pytest ./test

  build_docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          cd ./04_uns_historian
          docker build -t "uns/historian:${{ github.sha }}" -f ./Dockerfile ..
