# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: UNS Project

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 ./02_mqtt-cluster/src ./02_mqtt-cluster/test ./03_uns_graphdb/src ./03_uns_graphdb/test ./04_uns_historian/src ./04_uns_historian/test ./05_sparkplugb/src ./05_sparkplugb/test --count --select=E9,F63,F7,F82 --show-source --statistics 
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 ./02_mqtt-cluster/src ./02_mqtt-cluster/test ./03_uns_graphdb/src ./03_uns_graphdb/test ./04_uns_historian/src ./04_uns_historian/test ./05_sparkplugb/src ./05_sparkplugb/test --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest

        run: |
          poetry run pytest -m "not integrationtest" ./02_mqtt-cluster/test/
          poetry run pytest -m "not integrationtest" ./03_uns_graphdb/test/
          poetry run pytest -m "not integrationtest" ./04_uns_historian/test/
          poetry run pytest -m "not integrationtest" ./05_sparkplugb/test/
