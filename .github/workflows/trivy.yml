# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Trivy Scanner

on:
  push:
    branches: ["main"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
  schedule:
    - cron: "30 17 * * 6"

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: "ubuntu-20.04"
    strategy:
      matrix:
        include:
          - { module: 03_uns_graphdb, image: uns/graphdb }
          - { module: 04_uns_historian, image: uns/historian }
          - { module: 05_sparkplugb, image: uns/spb_mapper }
          - { module: 06_uns_kafka, image: uns/kafka_mapper }
          - { module: 07_uns_graphql, image: uns/graphql }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile

        run: |
          IFS=$'\n'
          cd "${{ matrix.module }}"
          docker build -t "${{ matrix.image }}:${{ github.sha }}" -f ./Dockerfile ..

      - name: Run Trivy vulnerability scanner on Docker Images
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ matrix.image }}:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
