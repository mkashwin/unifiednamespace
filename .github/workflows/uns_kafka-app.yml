# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: UNS Kafka Mapper

on:
  push:
    branches:
      - "**"
    paths:
      - "02_mqtt-cluster/**/*.py*"
      - "02_mqtt-cluster/pyproject.toml"
      - "02_mqtt-cluster/uv.lock"
      - "06_uns_kafka/**/*.py"
      - "06_uns_kafka/pyproject.toml"
      - "06_uns_kafka/uv.lock"
      - "06_uns_kafka/Dockerfile"
      - ".github/workflows/uns_kafka-app.yml"
      - ".github/include/**"

  workflow_dispatch:
    inputs:
      pytest_add_opts: # trunk-ignore(checkov/CKV_GHA_7) # trunk-ignore(checkov/CKV_GHA_7)
        description: "additional pytest options"
        type: string

  pull_request:
    branches:
      - "**"
    paths:
      - "02_mqtt-cluster/**/*.py*"
      - "02_mqtt-cluster/pyproject.toml"
      - "02_mqtt-cluster/uv.lock"
      - "06_uns_kafka/**/*.py"
      - "06_uns_kafka/pyproject.toml"
      - "06_uns_kafka/uv.lock"
      - "06_uns_kafka/Dockerfile"
      - ".github/workflows/uns_kafka-app.yml"
      - ".github/include/**"

permissions:
  contents: read

jobs:
  build_code:
    runs-on: ubuntu-latest
    environment: dev
    env:
      UNS_mqtt.host: "localhost"
      UNS_mqtt.port: 1883
      UNS_kafka.config: "{ 'client.id' = 'uns_kafka_client', 'bootstrap.servers' ='localhost:9092' }"
    services:
      uns_mqtt:
        image: "emqx/emqx:latest"
        ports:
          - "1883:1883"
          - "8083:8083"
      uns_kafka:
        image: "apache/kafka:latest"
        ports:
          - "9092:9092"
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
          KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://uns_kafka:29092,PLAINTEXT_HOST://localhost:9092"
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_PROCESS_ROLES: "broker,controller"
          KAFKA_NODE_ID: 1
          KAFKA_CONTROLLER_QUORUM_VOTERS: "1@uns_kafka:29093"
          KAFKA_LISTENERS: "PLAINTEXT://uns_kafka:29092,CONTROLLER://uns_kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092"
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
          CLUSTER_ID: "9Txfqiq7YvtJttNzeGxaO3eALNRah7hMkMTKPRgANw"

    steps:
      - uses: actions/checkout@v5

      - name: install librdkafka
        uses: ./.github/include/setup_librdkafka/

      - name: Setup with python environment
        uses: ./.github/include/setup_python/
        with:
          module: 06_uns_kafka

      - name: Run all type of tests
        uses: ./.github/include/execute_tests/
        timeout-minutes: 3
        with:
          module: 06_uns_kafka
          integration_tests: true
          SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}
          pytest_flags: ${{ inputs.pytest_add_opts }}

  build_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Compile and Test Dockerfile
        uses: ./.github/include/test_docker_builds/
        with:
          module: 06_uns_kafka
          image_name: uns/kafka_mapper
