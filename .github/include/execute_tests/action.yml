name: Execute Tests
description: Execute all tests
inputs:
    module:
        description: 'the actual module on which the tests should run. "."  for all modules'
        required: True
        default: "."
    integration_tests:
        description: "Boolean, If True all tests should run. If False skip tests tagged for integration"
        required: False
        default: "false"
    pytest_flags:
        description: "String, additional flags to be passed to pytest while running tests"
        required: False
        default: ""
    SAFETY_API_KEY:
        description: "API Key to invoke safety scanner. see https://safetycli.com/"
        required: True

runs:
    using: "composite"
    steps:
        - name: Lint with ruff
          shell: bash
          run: |
              # change to current directory of module        
              cd ./${{ inputs.module }} 
              # stop the build if there are Python syntax errors or undefined names
              poetry run ruff check --output-format=github  --select=E9,F63,F7,F82  .
              # exit-zero treats all errors as warnings. report all other errors but don't fail the job
              poetry run ruff check --output-format=github --exit-zero .

        - name: Test with pytest
          shell: bash
          run: |
              # change to current directory of module            
              cd ./${{ inputs.module }}
              if ${{ inputs.integration_tests }} ; then
                  poetry run pytest ${{inputs.pytest_flags}}
              else 
                  poetry run pytest -m "not integrationtest" ${{inputs.pytest_flags}}
              fi

        # - name: Test for security vulnerabilities
        #   shell: bash
        #   run: |
        #       # change to current directory of module
        #       cd ./${{ inputs.module }}
        #       poetry run safety check

        - name: Run Safety CLI to check for vulnerabilities
          uses: pyupio/safety-3-beta/safety-3@main
          with:
              api-key: ${{ inputs.SAFETY_API_KEY }}
              args:
                  args: "--target ${{ inputs.module }} --policy-file ./.safety-policy.yml"
