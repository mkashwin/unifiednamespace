[project]
name = "uns_spb_mapper"
version = "0.9.35"
description = "SparkplugB decoder to parse and unpack  SparkplugB messages to the UNS structure"
authors = [{ name = "Ashwin Krishnan", email = "mkashwin@gmail.com" }]
requires-python = ">=3.14, <4"
readme = "README.md"
license = { text = "MIT" }
maintainers = [
    { name = "Himanshu Dhami", email = "himanshudhami@gmail.com" },
    { name = "Johan Jeppson", email = "logic4human@gmail.com" },
]
keywords = [
    "uns",
    "mqtt",
    "sparkplugb",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Manufacturing",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Development Status :: 4 - Beta",
    "Topic :: Communications",
    # "Topic :: Software Development :: Libraries :: spB to UNS ",
    # "Topic :: Industry 4.0 :: Unified Name Space :: spB to UNS Mapper Client",
]
dependencies = [
    "logger~=1.4",
    "dynaconf~=3.2",
    "psutil>=6.1.1,<8",
]

[project.urls]
Repository = "https://github.com/mkashwin/unifiednamespace/tree/main/05_sparkplugb"

[project.scripts]
uns_spb_mapper = "uns_spb_mapper.uns_sparkplugb_listener:main"
uns_spb_mapper_healthcheck = "uns_spb_mapper.health_check:main"

[dependency-groups]
main = ["uns-mqtt"]
test = [
    "pytest>=8.3.4,<9",
    "pytest-xdist>=3.5.0,<4",
    "pytest-cov>=6.0.0,<8",
    "pytest-timeout>=2.3.1,<3",
     "safety>=3.4.0,<4",
]

[tool.uv]
default-groups = [
    "main",
    "test",
]

[tool.uv.sources]
uns-mqtt = { path = "../02_mqtt-cluster", editable = true }

[tool.hatch.build.targets.sdist]
include = ["src/uns_spb_mapper"]

[tool.hatch.build.targets.wheel]
include = ["src/uns_spb_mapper"]

[tool.hatch.build.targets.wheel.sources]
"src/uns_spb_mapper" = "uns_spb_mapper"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
norecursedirs = [".git", "build", "node_modules", "env*", "tmp*"]
testpaths = ["test"]
markers = ["integrationtest: mark a test as an integration test"]
addopts = "-n auto --timeout=300"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
# Extend the `pyproject.toml` file in the parent directory...
extend = "../pyproject.toml"
