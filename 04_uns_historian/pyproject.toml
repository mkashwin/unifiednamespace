[tool.poetry]
name = "uns_historian"
version = "0.7.10"
description = "Historian implementation for a UNS setup"
license = "MIT"
authors = ["Ashwin Krishnan <mkashwin@gmail.com>"]
maintainers = [
    "Himanshu Dhami <himanshudhami@gmail.com>",
    "Johan Jeppson <logic4human@gmail.com>",
]
readme = "README.md"
# homepage = ""
repository = "https://github.com/mkashwin/unifiednamespace/tree/main/04_uns_historian"
# documentation = ""
keywords = ["uns", "mqtt", "timescaledb", "postgres", "historian"]
#classifiers = [
#   "License :: OSI Approved :: MIT License",
#   "Intended Audience :: Manufacturing",
#   "Operating System :: OS Independent",
#   "Topic :: Software Development :: Libraries :: Historian",
#   "Topic :: Industry 4.0 :: Unified Name Space :: Historian Client"
# ]
packages = [{ include = "uns_historian", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
logger = "^1.4"
psycopg2-binary = "^2.9.8"
pytz = "^2023.3"
dynaconf = "^3.2.4"


[tool.poetry.group.dev.dependencies]
uns_mqtt = { path = "../02_mqtt-cluster", develop = true }

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
yapf = "^0.40.2"
pytest-cov = "^4.1.0"
safety = "^2.3.5"
ruff = "^0.1.6"

[tool.poetry.scripts]
uns_historian = "uns_historian.uns_mqtt_historian:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
norecursedirs = [".git", "build", "node_modules", "env*", "tmp*"]
testpaths = ["test"]
markers = ["integrationtest: mark a test as an integration test"]

[tool.ruff]
select = ["E9", "F63", "F7", "F82"]
exclude = [
    # No need to traverse our git directories
    ".git",
    ".github",
    # There's no value in checking cache directories
    "__pycache__",
    # The conf file is mostly autogenerated, ignore it
    "*env*",
    # This contains our built documentation
    "build",
    # This contains builds of flake8 that we don't want to check
    "dist",
    # This folder contains auto generated files which doesnt make sense to check 
    "generated",
]
# Allow lines to be as long as 127.
line-length = 127

[tool.ruff.lint.mccabe]
max-complexity = 10
